
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "rimgtool"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('rimgtool')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("compress")
> ### * compress
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compress
> ### Title: Return a compressed image Quantizes an image into 2^b clusters
> ###   and return a version of the image (the same size as the original)
> ###   where each pixel's original colour is replaced with the nearest
> ###   prototype colour.
> ### Aliases: compress
> 
> ### ** Examples
> 
> old_img <- array(1:24, dim = c(3, 4, 2))
> (compressed_img <- compress(old_img, 3L))
, , 1

     [,1] [,2] [,3] [,4]
[1,]  1.5    4  7.0 10.5
[2,]  1.5    4  7.0 10.5
[3,]  4.0    7 10.5 10.5

, , 2

     [,1] [,2] [,3] [,4]
[1,] 13.5   16 19.0 22.5
[2,] 13.5   16 19.0 22.5
[3,] 16.0   19 22.5 22.5

> 
> 
> 
> 
> cleanEx()
> nameEx("crop")
> ### * crop
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: crop
> ### Title: Return a croped image of desired size by removing pixels from
> ###   borders of the image
> ### Aliases: crop
> 
> ### ** Examples
> 
> old_img <- array(1:24, dim = c(10, 10, 3))
> croped_img <- crop(old_img, 5, 5)
> 
> 
> 
> cleanEx()
> nameEx("sharpen")
> ### * sharpen
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sharpen
> ### Title: Author: Frank Lu Function name: sharpen
> ### Aliases: sharpen
> 
> ### ** Examples
> 
> old_img <- array(rep(c(0.5), 100 * 100 * 3), dim = c(100, 100, 3))
> new_img <- sharpen(old_img)
[1] "row=100; col=100"
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.106 0.013 0.122 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
